[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "syda"
version = "0.0.2"
description = "A Python library for AI-powered synthetic data generation with referential integrity"
readme = "README.md"
license = {text = "LGPL-3.0-or-later"}
authors = [
    {name = "Rama Krishna Kumar Lingamgunta", email = "lrkkumar2606@gmail.com"}
]
keywords = [
    "synthetic data", 
    "AI", 
    "machine learning", 
    "data generation", 
    "testing", 
    "privacy",
    "SQLAlchemy",
    "OpenAI",
    "Anthropic",
    "Claude",
    "Google",
    "Gemini",
    "GPT"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Topic :: Utilities",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Framework :: Pydantic",
]
requires-python = ">=3.8"

# Core runtime dependencies
dependencies = [
    "pydantic>=2.4.2",
    "python-dotenv>=1.0.0",
    "sqlalchemy>=2.0.23",
    "pandas>=2.0.3",
    "numpy>=1.24.3",
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "python-magic>=0.4.27",
    "python-docx>=1.0.0",
    "openpyxl>=3.1.2",
    "pyyaml>=6.0.1",
    "boto3>=1.28.0",
    "azure-storage-blob>=12.19.0",
    "google-genai>=1.30.0",
    "jsonref>=1.1.0",
    "pdfplumber>=0.10.3",
    "pillow>=10.0.1",
    "pytesseract>=0.3.10",
    "sqlalchemy-utils>=0.41.1",
    "networkx>=3.1",
    "instructor>=1.0.0",
    "weasyprint>=65.1",
    "jsonref>=1.1.0",
    "google-genai>=1.30.0"
]

[project.optional-dependencies]
# Development dependencies
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

# Documentation dependencies
docs = [
    "mkdocs-material>=9.6.15",
    "mkdocs>=1.6.1",
    "mkdocs-macros-plugin>=1.3.7",
    "mkdocs-mermaid2-plugin>=1.1.1",
]

# Testing dependencies (separate from dev for CI)
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
]

# All optional dependencies
all = [
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "mkdocs-material>=9.6.15",
    "mkdocs>=1.6.1",
    "mkdocs-macros-plugin>=1.3.7",
    "mkdocs-mermaid2-plugin>=1.1.1",
]

[project.urls]
Homepage = "https://github.com/syda-ai/syda"
Documentation = "https://python.syda.ai"
Repository = "https://github.com/syda-ai/syda.git"
Issues = "https://github.com/syda-ai/syda/issues"
Changelog = "https://github.com/syda-ai/syda/blob/main/CHANGELOG.md"

# Setuptools configuration
[tool.setuptools]
package-dir = {"" = "."}
include-package-data = true

[tool.setuptools.packages.find]
include = ["syda*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
syda = ["schema_versions/*.json", "schema_versions/*.yaml", "schema_versions/*.yml"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["syda"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage configuration
[tool.coverage.run]
source = ["syda"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "numpy.*",
    "sqlalchemy.*",
    "anthropic.*",
    "openai.*",
    "instructor.*",
    "networkx.*",
    "weasyprint.*",
    "pytesseract.*",
    "pdfplumber.*",
    "python_magic.*",
    "boto3.*",
    "azure.*",
]
ignore_missing_imports = true 
